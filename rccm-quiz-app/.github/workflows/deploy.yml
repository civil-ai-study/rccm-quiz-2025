name: ULTRASYNC Production Deployment

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [vercel, railway, render]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r rccm-quiz-app/requirements.txt
        
    - name: Test application safety
      working-directory: ./
      run: |
        python -c "from app import app; print('✅ Application syntax verified')"
        python -c "import os; print('✅ Data directory:', os.path.exists('data'))"
        
    - name: Run production readiness tests
      working-directory: ./
      run: |
        # 本番デプロイ前の最終確認テスト
        python -c "
        import requests
        import subprocess
        import time
        import sys
        
        # Flask起動テスト
        print('🔄 Testing Flask startup...')
        process = subprocess.Popen([sys.executable, 'app.py'], 
                                 stdout=subprocess.DEVNULL, 
                                 stderr=subprocess.DEVNULL)
        time.sleep(10)
        
        try:
            # 基本接続確認
            response = requests.get('http://localhost:5000', timeout=5)
            if response.status_code == 200:
                print('✅ Flask server responding correctly')
            else:
                print(f'❌ Flask server error: {response.status_code}')
                sys.exit(1)
        except Exception as e:
            print(f'❌ Connection failed: {e}')
            sys.exit(1)
        finally:
            process.terminate()
            print('🧹 Test server stopped')
        "
        
    - name: Deploy to Vercel
      if: matrix.platform == 'vercel'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./rccm-quiz-app
        
    - name: Deploy to Railway
      if: matrix.platform == 'railway'
      uses: bervProject/railway-deploy@v1.0.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}
        
    - name: Deploy to Render
      if: matrix.platform == 'render'
      run: |
        echo "Render deployment triggered via webhook"
        # Render auto-deploys from GitHub when connected
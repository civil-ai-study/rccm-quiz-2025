version: '3.8'

services:
  # üîß Redis Server - High Performance Session Storage
  redis:
    image: redis:7.4-alpine
    container_name: rccm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - rccm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # üîß RCCM App with Redis Integration
  rccm-app:
    build: 
      context: .
      dockerfile: Dockerfile.redis
    container_name: rccm-app-redis
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - FLASK_ENV=production
      - SESSION_COOKIE_SECURE=false
      - ENABLE_FILE_FALLBACK=true
    volumes:
      - ./data:/app/data:ro
      - app-user-data:/app/user_data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - rccm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/redis/session/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # üìä Redis Insight - Management Interface (Optional)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: rccm-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis-insight-data:/db
    networks:
      - rccm-network
    profiles:
      - monitoring

  # üìà Prometheus - Metrics Collection (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: rccm-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rccm-network
    profiles:
      - monitoring

  # üìä Grafana - Visualization Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: rccm-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=rccm-grafana-admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - rccm-network
    profiles:
      - monitoring

  # üõ°Ô∏è Redis Sentinel - High Availability (Production)
  redis-sentinel:
    image: redis:7.4-alpine
    container_name: rccm-redis-sentinel
    restart: unless-stopped
    ports:
      - "26379:26379"
    volumes:
      - ./sentinel.conf:/usr/local/etc/redis/sentinel.conf:ro
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    depends_on:
      - redis
    networks:
      - rccm-network
    profiles:
      - production

volumes:
  redis-data:
    driver: local
  redis-insight-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  app-user-data:
    driver: local

networks:
  rccm-network:
    driver: bridge